.include "macros.inc"

.section .text, "ax"  # 0x8000C860 - 0x804064E0

.global OSInitMutex
OSInitMutex:
/* 801DEB7C 001D48FC  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801DEB80 001D4900  7C 08 02 A6 */	mflr r0
/* 801DEB84 001D4904  90 01 00 14 */	stw r0, 0x14(r1)
/* 801DEB88 001D4908  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801DEB8C 001D490C  7C 7F 1B 78 */	mr r31, r3
/* 801DEB90 001D4910  48 00 1B 75 */	bl OSInitThreadQueue
/* 801DEB94 001D4914  38 00 00 00 */	li r0, 0
/* 801DEB98 001D4918  90 1F 00 08 */	stw r0, 8(r31)
/* 801DEB9C 001D491C  90 1F 00 0C */	stw r0, 0xc(r31)
/* 801DEBA0 001D4920  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801DEBA4 001D4924  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801DEBA8 001D4928  7C 08 03 A6 */	mtlr r0
/* 801DEBAC 001D492C  38 21 00 10 */	addi r1, r1, 0x10
/* 801DEBB0 001D4930  4E 80 00 20 */	blr 

.global OSLockMutex
OSLockMutex:
/* 801DEBB4 001D4934  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801DEBB8 001D4938  7C 08 02 A6 */	mflr r0
/* 801DEBBC 001D493C  90 01 00 24 */	stw r0, 0x24(r1)
/* 801DEBC0 001D4940  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801DEBC4 001D4944  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801DEBC8 001D4948  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801DEBCC 001D494C  93 81 00 10 */	stw r28, 0x10(r1)
/* 801DEBD0 001D4950  7C 7C 1B 78 */	mr r28, r3
/* 801DEBD4 001D4954  4B FF E3 3D */	bl OSDisableInterrupts
/* 801DEBD8 001D4958  7C 7D 1B 78 */	mr r29, r3
/* 801DEBDC 001D495C  48 00 1B 39 */	bl OSGetCurrentThread
/* 801DEBE0 001D4960  7C 7E 1B 78 */	mr r30, r3
/* 801DEBE4 001D4964  3B E0 00 00 */	li r31, 0
lbl_801DEBE8:
/* 801DEBE8 001D4968  80 1C 00 08 */	lwz r0, 8(r28)
/* 801DEBEC 001D496C  2C 00 00 00 */	cmpwi r0, 0
/* 801DEBF0 001D4970  40 82 00 40 */	bne lbl_801DEC30
/* 801DEBF4 001D4974  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 801DEBF8 001D4978  93 DC 00 08 */	stw r30, 8(r28)
/* 801DEBFC 001D497C  38 03 00 01 */	addi r0, r3, 1
/* 801DEC00 001D4980  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801DEC04 001D4984  80 7E 02 F8 */	lwz r3, 0x2f8(r30)
/* 801DEC08 001D4988  2C 03 00 00 */	cmpwi r3, 0
/* 801DEC0C 001D498C  40 82 00 0C */	bne lbl_801DEC18
/* 801DEC10 001D4990  93 9E 02 F4 */	stw r28, 0x2f4(r30)
/* 801DEC14 001D4994  48 00 00 08 */	b lbl_801DEC1C
lbl_801DEC18:
/* 801DEC18 001D4998  93 83 00 10 */	stw r28, 0x10(r3)
lbl_801DEC1C:
/* 801DEC1C 001D499C  38 00 00 00 */	li r0, 0
/* 801DEC20 001D49A0  90 7C 00 14 */	stw r3, 0x14(r28)
/* 801DEC24 001D49A4  90 1C 00 10 */	stw r0, 0x10(r28)
/* 801DEC28 001D49A8  93 9E 02 F8 */	stw r28, 0x2f8(r30)
/* 801DEC2C 001D49AC  48 00 00 3C */	b lbl_801DEC68
lbl_801DEC30:
/* 801DEC30 001D49B0  7C 00 F0 40 */	cmplw r0, r30
/* 801DEC34 001D49B4  40 82 00 14 */	bne lbl_801DEC48
/* 801DEC38 001D49B8  80 7C 00 0C */	lwz r3, 0xc(r28)
/* 801DEC3C 001D49BC  38 03 00 01 */	addi r0, r3, 1
/* 801DEC40 001D49C0  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801DEC44 001D49C4  48 00 00 24 */	b lbl_801DEC68
lbl_801DEC48:
/* 801DEC48 001D49C8  93 9E 02 F0 */	stw r28, 0x2f0(r30)
/* 801DEC4C 001D49CC  80 7C 00 08 */	lwz r3, 8(r28)
/* 801DEC50 001D49D0  80 9E 02 D0 */	lwz r4, 0x2d0(r30)
/* 801DEC54 001D49D4  48 00 1D DD */	bl __OSPromoteThread
/* 801DEC58 001D49D8  7F 83 E3 78 */	mr r3, r28
/* 801DEC5C 001D49DC  48 00 2B 35 */	bl OSSleepThread
/* 801DEC60 001D49E0  93 FE 02 F0 */	stw r31, 0x2f0(r30)
/* 801DEC64 001D49E4  4B FF FF 84 */	b lbl_801DEBE8
lbl_801DEC68:
/* 801DEC68 001D49E8  7F A3 EB 78 */	mr r3, r29
/* 801DEC6C 001D49EC  4B FF E2 CD */	bl OSRestoreInterrupts
/* 801DEC70 001D49F0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801DEC74 001D49F4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801DEC78 001D49F8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801DEC7C 001D49FC  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801DEC80 001D4A00  83 81 00 10 */	lwz r28, 0x10(r1)
/* 801DEC84 001D4A04  7C 08 03 A6 */	mtlr r0
/* 801DEC88 001D4A08  38 21 00 20 */	addi r1, r1, 0x20
/* 801DEC8C 001D4A0C  4E 80 00 20 */	blr 

.global OSUnlockMutex
OSUnlockMutex:
/* 801DEC90 001D4A10  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801DEC94 001D4A14  7C 08 02 A6 */	mflr r0
/* 801DEC98 001D4A18  90 01 00 24 */	stw r0, 0x24(r1)
/* 801DEC9C 001D4A1C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801DECA0 001D4A20  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801DECA4 001D4A24  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801DECA8 001D4A28  7C 7D 1B 78 */	mr r29, r3
/* 801DECAC 001D4A2C  4B FF E2 65 */	bl OSDisableInterrupts
/* 801DECB0 001D4A30  7C 7F 1B 78 */	mr r31, r3
/* 801DECB4 001D4A34  48 00 1A 61 */	bl OSGetCurrentThread
/* 801DECB8 001D4A38  80 1D 00 08 */	lwz r0, 8(r29)
/* 801DECBC 001D4A3C  7C 7E 1B 78 */	mr r30, r3
/* 801DECC0 001D4A40  7C 00 18 40 */	cmplw r0, r3
/* 801DECC4 001D4A44  40 82 00 70 */	bne lbl_801DED34
/* 801DECC8 001D4A48  80 1D 00 0C */	lwz r0, 0xc(r29)
/* 801DECCC 001D4A4C  34 00 FF FF */	addic. r0, r0, -1
/* 801DECD0 001D4A50  90 1D 00 0C */	stw r0, 0xc(r29)
/* 801DECD4 001D4A54  40 82 00 60 */	bne lbl_801DED34
/* 801DECD8 001D4A58  80 9D 00 10 */	lwz r4, 0x10(r29)
/* 801DECDC 001D4A5C  80 BD 00 14 */	lwz r5, 0x14(r29)
/* 801DECE0 001D4A60  2C 04 00 00 */	cmpwi r4, 0
/* 801DECE4 001D4A64  40 82 00 0C */	bne lbl_801DECF0
/* 801DECE8 001D4A68  90 A3 02 F8 */	stw r5, 0x2f8(r3)
/* 801DECEC 001D4A6C  48 00 00 08 */	b lbl_801DECF4
lbl_801DECF0:
/* 801DECF0 001D4A70  90 A4 00 14 */	stw r5, 0x14(r4)
lbl_801DECF4:
/* 801DECF4 001D4A74  2C 05 00 00 */	cmpwi r5, 0
/* 801DECF8 001D4A78  40 82 00 0C */	bne lbl_801DED04
/* 801DECFC 001D4A7C  90 83 02 F4 */	stw r4, 0x2f4(r3)
/* 801DED00 001D4A80  48 00 00 08 */	b lbl_801DED08
lbl_801DED04:
/* 801DED04 001D4A84  90 85 00 10 */	stw r4, 0x10(r5)
lbl_801DED08:
/* 801DED08 001D4A88  38 00 00 00 */	li r0, 0
/* 801DED0C 001D4A8C  90 1D 00 08 */	stw r0, 8(r29)
/* 801DED10 001D4A90  80 83 02 D0 */	lwz r4, 0x2d0(r3)
/* 801DED14 001D4A94  80 03 02 D4 */	lwz r0, 0x2d4(r3)
/* 801DED18 001D4A98  7C 04 00 00 */	cmpw r4, r0
/* 801DED1C 001D4A9C  40 80 00 10 */	bge lbl_801DED2C
/* 801DED20 001D4AA0  7F C3 F3 78 */	mr r3, r30
/* 801DED24 001D4AA4  48 00 1B 1D */	bl __OSGetEffectivePriority
/* 801DED28 001D4AA8  90 7E 02 D0 */	stw r3, 0x2d0(r30)
lbl_801DED2C:
/* 801DED2C 001D4AAC  7F A3 EB 78 */	mr r3, r29
/* 801DED30 001D4AB0  48 00 2B 4D */	bl OSWakeupThread
lbl_801DED34:
/* 801DED34 001D4AB4  7F E3 FB 78 */	mr r3, r31
/* 801DED38 001D4AB8  4B FF E2 01 */	bl OSRestoreInterrupts
/* 801DED3C 001D4ABC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801DED40 001D4AC0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801DED44 001D4AC4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801DED48 001D4AC8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801DED4C 001D4ACC  7C 08 03 A6 */	mtlr r0
/* 801DED50 001D4AD0  38 21 00 20 */	addi r1, r1, 0x20
/* 801DED54 001D4AD4  4E 80 00 20 */	blr 

.global __OSUnlockAllMutex
__OSUnlockAllMutex:
/* 801DED58 001D4AD8  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801DED5C 001D4ADC  7C 08 02 A6 */	mflr r0
/* 801DED60 001D4AE0  90 01 00 14 */	stw r0, 0x14(r1)
/* 801DED64 001D4AE4  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801DED68 001D4AE8  3B E0 00 00 */	li r31, 0
/* 801DED6C 001D4AEC  93 C1 00 08 */	stw r30, 8(r1)
/* 801DED70 001D4AF0  7C 7E 1B 78 */	mr r30, r3
/* 801DED74 001D4AF4  48 00 00 2C */	b lbl_801DEDA0
lbl_801DED78:
/* 801DED78 001D4AF8  80 83 00 10 */	lwz r4, 0x10(r3)
/* 801DED7C 001D4AFC  2C 04 00 00 */	cmpwi r4, 0
/* 801DED80 001D4B00  40 82 00 0C */	bne lbl_801DED8C
/* 801DED84 001D4B04  93 FE 02 F8 */	stw r31, 0x2f8(r30)
/* 801DED88 001D4B08  48 00 00 08 */	b lbl_801DED90
lbl_801DED8C:
/* 801DED8C 001D4B0C  93 E4 00 14 */	stw r31, 0x14(r4)
lbl_801DED90:
/* 801DED90 001D4B10  90 9E 02 F4 */	stw r4, 0x2f4(r30)
/* 801DED94 001D4B14  93 E3 00 0C */	stw r31, 0xc(r3)
/* 801DED98 001D4B18  93 E3 00 08 */	stw r31, 8(r3)
/* 801DED9C 001D4B1C  48 00 2A E1 */	bl OSWakeupThread
lbl_801DEDA0:
/* 801DEDA0 001D4B20  80 7E 02 F4 */	lwz r3, 0x2f4(r30)
/* 801DEDA4 001D4B24  2C 03 00 00 */	cmpwi r3, 0
/* 801DEDA8 001D4B28  40 82 FF D0 */	bne lbl_801DED78
/* 801DEDAC 001D4B2C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801DEDB0 001D4B30  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801DEDB4 001D4B34  83 C1 00 08 */	lwz r30, 8(r1)
/* 801DEDB8 001D4B38  7C 08 03 A6 */	mtlr r0
/* 801DEDBC 001D4B3C  38 21 00 10 */	addi r1, r1, 0x10
/* 801DEDC0 001D4B40  4E 80 00 20 */	blr 

.global OSTryLockMutex
OSTryLockMutex:
/* 801DEDC4 001D4B44  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801DEDC8 001D4B48  7C 08 02 A6 */	mflr r0
/* 801DEDCC 001D4B4C  90 01 00 24 */	stw r0, 0x24(r1)
/* 801DEDD0 001D4B50  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801DEDD4 001D4B54  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801DEDD8 001D4B58  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801DEDDC 001D4B5C  7C 7D 1B 78 */	mr r29, r3
/* 801DEDE0 001D4B60  4B FF E1 31 */	bl OSDisableInterrupts
/* 801DEDE4 001D4B64  7C 7F 1B 78 */	mr r31, r3
/* 801DEDE8 001D4B68  48 00 19 2D */	bl OSGetCurrentThread
/* 801DEDEC 001D4B6C  80 1D 00 08 */	lwz r0, 8(r29)
/* 801DEDF0 001D4B70  2C 00 00 00 */	cmpwi r0, 0
/* 801DEDF4 001D4B74  40 82 00 44 */	bne lbl_801DEE38
/* 801DEDF8 001D4B78  80 9D 00 0C */	lwz r4, 0xc(r29)
/* 801DEDFC 001D4B7C  90 7D 00 08 */	stw r3, 8(r29)
/* 801DEE00 001D4B80  38 04 00 01 */	addi r0, r4, 1
/* 801DEE04 001D4B84  90 1D 00 0C */	stw r0, 0xc(r29)
/* 801DEE08 001D4B88  80 83 02 F8 */	lwz r4, 0x2f8(r3)
/* 801DEE0C 001D4B8C  2C 04 00 00 */	cmpwi r4, 0
/* 801DEE10 001D4B90  40 82 00 0C */	bne lbl_801DEE1C
/* 801DEE14 001D4B94  93 A3 02 F4 */	stw r29, 0x2f4(r3)
/* 801DEE18 001D4B98  48 00 00 08 */	b lbl_801DEE20
lbl_801DEE1C:
/* 801DEE1C 001D4B9C  93 A4 00 10 */	stw r29, 0x10(r4)
lbl_801DEE20:
/* 801DEE20 001D4BA0  38 00 00 00 */	li r0, 0
/* 801DEE24 001D4BA4  90 9D 00 14 */	stw r4, 0x14(r29)
/* 801DEE28 001D4BA8  3B C0 00 01 */	li r30, 1
/* 801DEE2C 001D4BAC  90 1D 00 10 */	stw r0, 0x10(r29)
/* 801DEE30 001D4BB0  93 A3 02 F8 */	stw r29, 0x2f8(r3)
/* 801DEE34 001D4BB4  48 00 00 24 */	b lbl_801DEE58
lbl_801DEE38:
/* 801DEE38 001D4BB8  7C 00 18 40 */	cmplw r0, r3
/* 801DEE3C 001D4BBC  40 82 00 18 */	bne lbl_801DEE54
/* 801DEE40 001D4BC0  80 7D 00 0C */	lwz r3, 0xc(r29)
/* 801DEE44 001D4BC4  3B C0 00 01 */	li r30, 1
/* 801DEE48 001D4BC8  38 03 00 01 */	addi r0, r3, 1
/* 801DEE4C 001D4BCC  90 1D 00 0C */	stw r0, 0xc(r29)
/* 801DEE50 001D4BD0  48 00 00 08 */	b lbl_801DEE58
lbl_801DEE54:
/* 801DEE54 001D4BD4  3B C0 00 00 */	li r30, 0
lbl_801DEE58:
/* 801DEE58 001D4BD8  7F E3 FB 78 */	mr r3, r31
/* 801DEE5C 001D4BDC  4B FF E0 DD */	bl OSRestoreInterrupts
/* 801DEE60 001D4BE0  7F C3 F3 78 */	mr r3, r30
/* 801DEE64 001D4BE4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801DEE68 001D4BE8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801DEE6C 001D4BEC  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801DEE70 001D4BF0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801DEE74 001D4BF4  7C 08 03 A6 */	mtlr r0
/* 801DEE78 001D4BF8  38 21 00 20 */	addi r1, r1, 0x20
/* 801DEE7C 001D4BFC  4E 80 00 20 */	blr 

.global OSInitCond
OSInitCond:
/* 801DEE80 001D4C00  48 00 18 84 */	b OSInitThreadQueue

.global OSWaitCond
OSWaitCond:
/* 801DEE84 001D4C04  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801DEE88 001D4C08  7C 08 02 A6 */	mflr r0
/* 801DEE8C 001D4C0C  90 01 00 24 */	stw r0, 0x24(r1)
/* 801DEE90 001D4C10  39 61 00 20 */	addi r11, r1, 0x20
/* 801DEE94 001D4C14  48 21 24 8D */	bl _savegpr_27
/* 801DEE98 001D4C18  7C 7B 1B 78 */	mr r27, r3
/* 801DEE9C 001D4C1C  7C 9C 23 78 */	mr r28, r4
/* 801DEEA0 001D4C20  4B FF E0 71 */	bl OSDisableInterrupts
/* 801DEEA4 001D4C24  7C 7F 1B 78 */	mr r31, r3
/* 801DEEA8 001D4C28  48 00 18 6D */	bl OSGetCurrentThread
/* 801DEEAC 001D4C2C  80 1C 00 08 */	lwz r0, 8(r28)
/* 801DEEB0 001D4C30  7C 7E 1B 78 */	mr r30, r3
/* 801DEEB4 001D4C34  7C 00 18 40 */	cmplw r0, r3
/* 801DEEB8 001D4C38  40 82 00 88 */	bne lbl_801DEF40
/* 801DEEBC 001D4C3C  80 9C 00 10 */	lwz r4, 0x10(r28)
/* 801DEEC0 001D4C40  38 00 00 00 */	li r0, 0
/* 801DEEC4 001D4C44  83 BC 00 0C */	lwz r29, 0xc(r28)
/* 801DEEC8 001D4C48  2C 04 00 00 */	cmpwi r4, 0
/* 801DEECC 001D4C4C  80 BC 00 14 */	lwz r5, 0x14(r28)
/* 801DEED0 001D4C50  90 1C 00 0C */	stw r0, 0xc(r28)
/* 801DEED4 001D4C54  40 82 00 0C */	bne lbl_801DEEE0
/* 801DEED8 001D4C58  90 A3 02 F8 */	stw r5, 0x2f8(r3)
/* 801DEEDC 001D4C5C  48 00 00 08 */	b lbl_801DEEE4
lbl_801DEEE0:
/* 801DEEE0 001D4C60  90 A4 00 14 */	stw r5, 0x14(r4)
lbl_801DEEE4:
/* 801DEEE4 001D4C64  2C 05 00 00 */	cmpwi r5, 0
/* 801DEEE8 001D4C68  40 82 00 0C */	bne lbl_801DEEF4
/* 801DEEEC 001D4C6C  90 83 02 F4 */	stw r4, 0x2f4(r3)
/* 801DEEF0 001D4C70  48 00 00 08 */	b lbl_801DEEF8
lbl_801DEEF4:
/* 801DEEF4 001D4C74  90 85 00 10 */	stw r4, 0x10(r5)
lbl_801DEEF8:
/* 801DEEF8 001D4C78  38 00 00 00 */	li r0, 0
/* 801DEEFC 001D4C7C  90 1C 00 08 */	stw r0, 8(r28)
/* 801DEF00 001D4C80  80 83 02 D0 */	lwz r4, 0x2d0(r3)
/* 801DEF04 001D4C84  80 03 02 D4 */	lwz r0, 0x2d4(r3)
/* 801DEF08 001D4C88  7C 04 00 00 */	cmpw r4, r0
/* 801DEF0C 001D4C8C  40 80 00 10 */	bge lbl_801DEF1C
/* 801DEF10 001D4C90  7F C3 F3 78 */	mr r3, r30
/* 801DEF14 001D4C94  48 00 19 2D */	bl __OSGetEffectivePriority
/* 801DEF18 001D4C98  90 7E 02 D0 */	stw r3, 0x2d0(r30)
lbl_801DEF1C:
/* 801DEF1C 001D4C9C  48 00 18 45 */	bl OSDisableScheduler
/* 801DEF20 001D4CA0  7F 83 E3 78 */	mr r3, r28
/* 801DEF24 001D4CA4  48 00 29 59 */	bl OSWakeupThread
/* 801DEF28 001D4CA8  48 00 18 75 */	bl OSEnableScheduler
/* 801DEF2C 001D4CAC  7F 63 DB 78 */	mr r3, r27
/* 801DEF30 001D4CB0  48 00 28 61 */	bl OSSleepThread
/* 801DEF34 001D4CB4  7F 83 E3 78 */	mr r3, r28
/* 801DEF38 001D4CB8  4B FF FC 7D */	bl OSLockMutex
/* 801DEF3C 001D4CBC  93 BC 00 0C */	stw r29, 0xc(r28)
lbl_801DEF40:
/* 801DEF40 001D4CC0  7F E3 FB 78 */	mr r3, r31
/* 801DEF44 001D4CC4  4B FF DF F5 */	bl OSRestoreInterrupts
/* 801DEF48 001D4CC8  39 61 00 20 */	addi r11, r1, 0x20
/* 801DEF4C 001D4CCC  48 21 24 21 */	bl _restgpr_27
/* 801DEF50 001D4CD0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801DEF54 001D4CD4  7C 08 03 A6 */	mtlr r0
/* 801DEF58 001D4CD8  38 21 00 20 */	addi r1, r1, 0x20
/* 801DEF5C 001D4CDC  4E 80 00 20 */	blr 

.global OSSignalCond
OSSignalCond:
/* 801DEF60 001D4CE0  48 00 29 1C */	b OSWakeupThread

