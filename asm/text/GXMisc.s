.include "macros.inc"

.section .text, "ax"  # 0x8000C860 - 0x804064E0

.global GXSetMisc
GXSetMisc:
/* 801F04A4 001E6224  2C 03 00 02 */	cmpwi r3, 2
/* 801F04A8 001E6228  41 82 00 58 */	beq lbl_801F0500
/* 801F04AC 001E622C  40 80 00 14 */	bge lbl_801F04C0
/* 801F04B0 001E6230  2C 03 00 00 */	cmpwi r3, 0
/* 801F04B4 001E6234  4D 82 00 20 */	beqlr 
/* 801F04B8 001E6238  40 80 00 14 */	bge lbl_801F04CC
/* 801F04BC 001E623C  4E 80 00 20 */	blr 
lbl_801F04C0:
/* 801F04C0 001E6240  2C 03 00 04 */	cmpwi r3, 4
/* 801F04C4 001E6244  4C 80 00 20 */	bgelr 
/* 801F04C8 001E6248  48 00 00 50 */	b lbl_801F0518
lbl_801F04CC:
/* 801F04CC 001E624C  54 80 04 3F */	clrlwi. r0, r4, 0x10
/* 801F04D0 001E6250  80 A2 A4 90 */	lwz r5, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F04D4 001E6254  B0 85 00 04 */	sth r4, 4(r5)
/* 801F04D8 001E6258  7C 03 00 34 */	cntlzw r3, r0
/* 801F04DC 001E625C  38 00 00 01 */	li r0, 1
/* 801F04E0 001E6260  54 63 DC 3E */	rlwinm r3, r3, 0x1b, 0x10, 0x1f
/* 801F04E4 001E6264  B0 65 00 00 */	sth r3, 0(r5)
/* 801F04E8 001E6268  B0 05 00 02 */	sth r0, 2(r5)
/* 801F04EC 001E626C  4D 82 00 20 */	beqlr 
/* 801F04F0 001E6270  80 05 05 FC */	lwz r0, 0x5fc(r5)
/* 801F04F4 001E6274  60 00 00 08 */	ori r0, r0, 8
/* 801F04F8 001E6278  90 05 05 FC */	stw r0, 0x5fc(r5)
/* 801F04FC 001E627C  4E 80 00 20 */	blr 
lbl_801F0500:
/* 801F0500 001E6280  7C 04 00 D0 */	neg r0, r4
/* 801F0504 001E6284  80 62 A4 90 */	lwz r3, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F0508 001E6288  7C 00 23 78 */	or r0, r0, r4
/* 801F050C 001E628C  54 00 0F FE */	srwi r0, r0, 0x1f
/* 801F0510 001E6290  98 03 05 F9 */	stb r0, 0x5f9(r3)
/* 801F0514 001E6294  4E 80 00 20 */	blr 
lbl_801F0518:
/* 801F0518 001E6298  7C 04 00 D0 */	neg r0, r4
/* 801F051C 001E629C  80 62 A4 90 */	lwz r3, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F0520 001E62A0  7C 00 23 78 */	or r0, r0, r4
/* 801F0524 001E62A4  54 00 0F FE */	srwi r0, r0, 0x1f
/* 801F0528 001E62A8  98 03 05 FA */	stb r0, 0x5fa(r3)
/* 801F052C 001E62AC  4E 80 00 20 */	blr 

.global GXFlush
GXFlush:
/* 801F0530 001E62B0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0534 001E62B4  7C 08 02 A6 */	mflr r0
/* 801F0538 001E62B8  80 62 A4 90 */	lwz r3, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F053C 001E62BC  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F0540 001E62C0  80 03 05 FC */	lwz r0, 0x5fc(r3)
/* 801F0544 001E62C4  2C 00 00 00 */	cmpwi r0, 0
/* 801F0548 001E62C8  41 82 00 08 */	beq lbl_801F0550
/* 801F054C 001E62CC  48 00 08 C5 */	bl __GXSetDirtyState
lbl_801F0550:
/* 801F0550 001E62D0  38 00 00 00 */	li r0, 0
/* 801F0554 001E62D4  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 801F0558 001E62D8  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 801F055C 001E62DC  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0560 001E62E0  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0564 001E62E4  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0568 001E62E8  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F056C 001E62EC  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0570 001E62F0  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0574 001E62F4  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F0578 001E62F8  4B FE 4B 29 */	bl PPCSync
/* 801F057C 001E62FC  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0580 001E6300  7C 08 03 A6 */	mtlr r0
/* 801F0584 001E6304  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0588 001E6308  4E 80 00 20 */	blr 

.global GXResetWriteGatherPipe
GXResetWriteGatherPipe:
/* 801F058C 001E630C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0590 001E6310  7C 08 02 A6 */	mflr r0
/* 801F0594 001E6314  90 01 00 14 */	stw r0, 0x14(r1)
lbl_801F0598:
/* 801F0598 001E6318  4B FE 4B AD */	bl PPCMfwpar
/* 801F059C 001E631C  54 60 07 FF */	clrlwi. r0, r3, 0x1f
/* 801F05A0 001E6320  40 82 FF F8 */	bne lbl_801F0598
/* 801F05A4 001E6324  3C 60 0C 01 */	lis r3, 0x0C008000@ha
/* 801F05A8 001E6328  38 63 80 00 */	addi r3, r3, 0x0C008000@l
/* 801F05AC 001E632C  4B FE 4B A5 */	bl PPCMtwpar
/* 801F05B0 001E6330  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F05B4 001E6334  7C 08 03 A6 */	mtlr r0
/* 801F05B8 001E6338  38 21 00 10 */	addi r1, r1, 0x10
/* 801F05BC 001E633C  4E 80 00 20 */	blr 

.global __GXAbort
__GXAbort:
/* 801F05C0 001E6340  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801F05C4 001E6344  7C 08 02 A6 */	mflr r0
/* 801F05C8 001E6348  90 01 00 24 */	stw r0, 0x24(r1)
/* 801F05CC 001E634C  39 61 00 20 */	addi r11, r1, 0x20
/* 801F05D0 001E6350  48 20 0D 51 */	bl _savegpr_27
/* 801F05D4 001E6354  80 62 A4 90 */	lwz r3, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F05D8 001E6358  88 03 05 FA */	lbz r0, 0x5fa(r3)
/* 801F05DC 001E635C  2C 00 00 00 */	cmpwi r0, 0
/* 801F05E0 001E6360  41 82 00 A0 */	beq lbl_801F0680
/* 801F05E4 001E6364  4B FF E9 91 */	bl __GXIsGPFifoReady
/* 801F05E8 001E6368  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 801F05EC 001E636C  41 82 00 94 */	beq lbl_801F0680
/* 801F05F0 001E6370  80 AD C4 5C */	lwz r5, lbl_805A087C-_SDA_BASE_(r13)
/* 801F05F4 001E6374  A0 05 00 4E */	lhz r0, 0x4e(r5)
lbl_801F05F8:
/* 801F05F8 001E6378  7C 03 03 78 */	mr r3, r0
/* 801F05FC 001E637C  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 801F0600 001E6380  A0 05 00 4E */	lhz r0, 0x4e(r5)
/* 801F0604 001E6384  7C 00 18 40 */	cmplw r0, r3
/* 801F0608 001E6388  40 82 FF F0 */	bne lbl_801F05F8
/* 801F060C 001E638C  54 03 80 1E */	slwi r3, r0, 0x10
/* 801F0610 001E6390  38 00 00 00 */	li r0, 0
/* 801F0614 001E6394  7C 7B 23 78 */	or r27, r3, r4
/* 801F0618 001E6398  3B A0 00 08 */	li r29, 8
/* 801F061C 001E639C  6C 1C 80 00 */	xoris r28, r0, 0x8000
lbl_801F0620:
/* 801F0620 001E63A0  4B FF 15 15 */	bl OSGetTime
/* 801F0624 001E63A4  7C 9F 23 78 */	mr r31, r4
/* 801F0628 001E63A8  7C 7E 1B 78 */	mr r30, r3
lbl_801F062C:
/* 801F062C 001E63AC  4B FF 15 09 */	bl OSGetTime
/* 801F0630 001E63B0  7C 9F 20 10 */	subfc r4, r31, r4
/* 801F0634 001E63B4  7C 1E 19 10 */	subfe r0, r30, r3
/* 801F0638 001E63B8  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F063C 001E63BC  7C 04 E8 10 */	subfc r0, r4, r29
/* 801F0640 001E63C0  7C 63 E1 10 */	subfe r3, r3, r28
/* 801F0644 001E63C4  7C 7C E1 10 */	subfe r3, r28, r28
/* 801F0648 001E63C8  7C 63 00 D1 */	neg. r3, r3
/* 801F064C 001E63CC  41 82 FF E0 */	beq lbl_801F062C
/* 801F0650 001E63D0  80 AD C4 5C */	lwz r5, lbl_805A087C-_SDA_BASE_(r13)
/* 801F0654 001E63D4  A0 05 00 4E */	lhz r0, 0x4e(r5)
lbl_801F0658:
/* 801F0658 001E63D8  7C 03 03 78 */	mr r3, r0
/* 801F065C 001E63DC  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 801F0660 001E63E0  A0 05 00 4E */	lhz r0, 0x4e(r5)
/* 801F0664 001E63E4  7C 00 18 40 */	cmplw r0, r3
/* 801F0668 001E63E8  40 82 FF F0 */	bne lbl_801F0658
/* 801F066C 001E63EC  54 00 80 1E */	slwi r0, r0, 0x10
/* 801F0670 001E63F0  7C 00 23 78 */	or r0, r0, r4
/* 801F0674 001E63F4  7C 00 D8 40 */	cmplw r0, r27
/* 801F0678 001E63F8  7C 1B 03 78 */	mr r27, r0
/* 801F067C 001E63FC  40 82 FF A4 */	bne lbl_801F0620
lbl_801F0680:
/* 801F0680 001E6400  38 00 00 01 */	li r0, 1
/* 801F0684 001E6404  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 801F0688 001E6408  90 03 30 18 */	stw r0, 0xCC003018@l(r3)
/* 801F068C 001E640C  4B FF 14 A9 */	bl OSGetTime
/* 801F0690 001E6410  38 00 00 00 */	li r0, 0
/* 801F0694 001E6414  7C 9F 23 78 */	mr r31, r4
/* 801F0698 001E6418  7C 7E 1B 78 */	mr r30, r3
/* 801F069C 001E641C  3B A0 00 32 */	li r29, 0x32
/* 801F06A0 001E6420  6C 1C 80 00 */	xoris r28, r0, 0x8000
lbl_801F06A4:
/* 801F06A4 001E6424  4B FF 14 91 */	bl OSGetTime
/* 801F06A8 001E6428  7C 9F 20 10 */	subfc r4, r31, r4
/* 801F06AC 001E642C  7C 1E 19 10 */	subfe r0, r30, r3
/* 801F06B0 001E6430  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F06B4 001E6434  7C 04 E8 10 */	subfc r0, r4, r29
/* 801F06B8 001E6438  7C 63 E1 10 */	subfe r3, r3, r28
/* 801F06BC 001E643C  7C 7C E1 10 */	subfe r3, r28, r28
/* 801F06C0 001E6440  7C 63 00 D1 */	neg. r3, r3
/* 801F06C4 001E6444  41 82 FF E0 */	beq lbl_801F06A4
/* 801F06C8 001E6448  3B C0 00 00 */	li r30, 0
/* 801F06CC 001E644C  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 801F06D0 001E6450  93 C3 30 18 */	stw r30, 0xCC003018@l(r3)
/* 801F06D4 001E6454  4B FF 14 61 */	bl OSGetTime
/* 801F06D8 001E6458  6F DF 80 00 */	xoris r31, r30, 0x8000
/* 801F06DC 001E645C  7C 9C 23 78 */	mr r28, r4
/* 801F06E0 001E6460  7C 7D 1B 78 */	mr r29, r3
/* 801F06E4 001E6464  3B C0 00 05 */	li r30, 5
lbl_801F06E8:
/* 801F06E8 001E6468  4B FF 14 4D */	bl OSGetTime
/* 801F06EC 001E646C  7C 9C 20 10 */	subfc r4, r28, r4
/* 801F06F0 001E6470  7C 1D 19 10 */	subfe r0, r29, r3
/* 801F06F4 001E6474  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F06F8 001E6478  7C 04 F0 10 */	subfc r0, r4, r30
/* 801F06FC 001E647C  7C 63 F9 10 */	subfe r3, r3, r31
/* 801F0700 001E6480  7C 7F F9 10 */	subfe r3, r31, r31
/* 801F0704 001E6484  7C 63 00 D1 */	neg. r3, r3
/* 801F0708 001E6488  41 82 FF E0 */	beq lbl_801F06E8
/* 801F070C 001E648C  39 61 00 20 */	addi r11, r1, 0x20
/* 801F0710 001E6490  48 20 0C 5D */	bl _restgpr_27
/* 801F0714 001E6494  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801F0718 001E6498  7C 08 03 A6 */	mtlr r0
/* 801F071C 001E649C  38 21 00 20 */	addi r1, r1, 0x20
/* 801F0720 001E64A0  4E 80 00 20 */	blr 

.global GXAbortFrame
GXAbortFrame:
/* 801F0724 001E64A4  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801F0728 001E64A8  7C 08 02 A6 */	mflr r0
/* 801F072C 001E64AC  90 01 00 24 */	stw r0, 0x24(r1)
/* 801F0730 001E64B0  39 61 00 20 */	addi r11, r1, 0x20
/* 801F0734 001E64B4  48 20 0B E9 */	bl _savegpr_26
/* 801F0738 001E64B8  83 E2 A4 90 */	lwz r31, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F073C 001E64BC  88 1F 05 FA */	lbz r0, 0x5fa(r31)
/* 801F0740 001E64C0  2C 00 00 00 */	cmpwi r0, 0
/* 801F0744 001E64C4  41 82 00 A0 */	beq lbl_801F07E4
/* 801F0748 001E64C8  4B FF E8 2D */	bl __GXIsGPFifoReady
/* 801F074C 001E64CC  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 801F0750 001E64D0  41 82 00 94 */	beq lbl_801F07E4
/* 801F0754 001E64D4  80 AD C4 5C */	lwz r5, lbl_805A087C-_SDA_BASE_(r13)
/* 801F0758 001E64D8  A0 65 00 4E */	lhz r3, 0x4e(r5)
lbl_801F075C:
/* 801F075C 001E64DC  7C 60 1B 78 */	mr r0, r3
/* 801F0760 001E64E0  A0 85 00 50 */	lhz r4, 0x50(r5)
/* 801F0764 001E64E4  A0 65 00 4E */	lhz r3, 0x4e(r5)
/* 801F0768 001E64E8  7C 03 00 40 */	cmplw r3, r0
/* 801F076C 001E64EC  40 82 FF F0 */	bne lbl_801F075C
/* 801F0770 001E64F0  54 63 80 1E */	slwi r3, r3, 0x10
/* 801F0774 001E64F4  38 00 00 00 */	li r0, 0
/* 801F0778 001E64F8  7C 7A 23 78 */	or r26, r3, r4
/* 801F077C 001E64FC  3B 80 00 08 */	li r28, 8
/* 801F0780 001E6500  6C 1B 80 00 */	xoris r27, r0, 0x8000
lbl_801F0784:
/* 801F0784 001E6504  4B FF 13 B1 */	bl OSGetTime
/* 801F0788 001E6508  7C 9E 23 78 */	mr r30, r4
/* 801F078C 001E650C  7C 7D 1B 78 */	mr r29, r3
lbl_801F0790:
/* 801F0790 001E6510  4B FF 13 A5 */	bl OSGetTime
/* 801F0794 001E6514  7C 9E 20 10 */	subfc r4, r30, r4
/* 801F0798 001E6518  7C 1D 19 10 */	subfe r0, r29, r3
/* 801F079C 001E651C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F07A0 001E6520  7C 04 E0 10 */	subfc r0, r4, r28
/* 801F07A4 001E6524  7C 63 D9 10 */	subfe r3, r3, r27
/* 801F07A8 001E6528  7C 7B D9 10 */	subfe r3, r27, r27
/* 801F07AC 001E652C  7C 63 00 D1 */	neg. r3, r3
/* 801F07B0 001E6530  41 82 FF E0 */	beq lbl_801F0790
/* 801F07B4 001E6534  80 AD C4 5C */	lwz r5, lbl_805A087C-_SDA_BASE_(r13)
/* 801F07B8 001E6538  A0 85 00 4E */	lhz r4, 0x4e(r5)
lbl_801F07BC:
/* 801F07BC 001E653C  7C 80 23 78 */	mr r0, r4
/* 801F07C0 001E6540  A0 65 00 50 */	lhz r3, 0x50(r5)
/* 801F07C4 001E6544  A0 85 00 4E */	lhz r4, 0x4e(r5)
/* 801F07C8 001E6548  7C 04 00 40 */	cmplw r4, r0
/* 801F07CC 001E654C  40 82 FF F0 */	bne lbl_801F07BC
/* 801F07D0 001E6550  54 80 80 1E */	slwi r0, r4, 0x10
/* 801F07D4 001E6554  7C 00 1B 78 */	or r0, r0, r3
/* 801F07D8 001E6558  7C 00 D0 40 */	cmplw r0, r26
/* 801F07DC 001E655C  7C 1A 03 78 */	mr r26, r0
/* 801F07E0 001E6560  40 82 FF A4 */	bne lbl_801F0784
lbl_801F07E4:
/* 801F07E4 001E6564  38 00 00 01 */	li r0, 1
/* 801F07E8 001E6568  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 801F07EC 001E656C  90 03 30 18 */	stw r0, 0xCC003018@l(r3)
/* 801F07F0 001E6570  4B FF 13 45 */	bl OSGetTime
/* 801F07F4 001E6574  38 00 00 00 */	li r0, 0
/* 801F07F8 001E6578  7C 9E 23 78 */	mr r30, r4
/* 801F07FC 001E657C  7C 7D 1B 78 */	mr r29, r3
/* 801F0800 001E6580  3B 80 00 32 */	li r28, 0x32
/* 801F0804 001E6584  6C 1B 80 00 */	xoris r27, r0, 0x8000
lbl_801F0808:
/* 801F0808 001E6588  4B FF 13 2D */	bl OSGetTime
/* 801F080C 001E658C  7C 9E 20 10 */	subfc r4, r30, r4
/* 801F0810 001E6590  7C 1D 19 10 */	subfe r0, r29, r3
/* 801F0814 001E6594  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F0818 001E6598  7C 04 E0 10 */	subfc r0, r4, r28
/* 801F081C 001E659C  7C 63 D9 10 */	subfe r3, r3, r27
/* 801F0820 001E65A0  7C 7B D9 10 */	subfe r3, r27, r27
/* 801F0824 001E65A4  7C 63 00 D1 */	neg. r3, r3
/* 801F0828 001E65A8  41 82 FF E0 */	beq lbl_801F0808
/* 801F082C 001E65AC  3B A0 00 00 */	li r29, 0
/* 801F0830 001E65B0  3C 60 CC 00 */	lis r3, 0xCC003018@ha
/* 801F0834 001E65B4  93 A3 30 18 */	stw r29, 0xCC003018@l(r3)
/* 801F0838 001E65B8  4B FF 12 FD */	bl OSGetTime
/* 801F083C 001E65BC  6F BE 80 00 */	xoris r30, r29, 0x8000
/* 801F0840 001E65C0  7C 9B 23 78 */	mr r27, r4
/* 801F0844 001E65C4  7C 7C 1B 78 */	mr r28, r3
/* 801F0848 001E65C8  3B A0 00 05 */	li r29, 5
lbl_801F084C:
/* 801F084C 001E65CC  4B FF 12 E9 */	bl OSGetTime
/* 801F0850 001E65D0  7C 9B 20 10 */	subfc r4, r27, r4
/* 801F0854 001E65D4  7C 1C 19 10 */	subfe r0, r28, r3
/* 801F0858 001E65D8  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801F085C 001E65DC  7C 04 E8 10 */	subfc r0, r4, r29
/* 801F0860 001E65E0  7C 63 F1 10 */	subfe r3, r3, r30
/* 801F0864 001E65E4  7C 7E F1 10 */	subfe r3, r30, r30
/* 801F0868 001E65E8  7C 63 00 D1 */	neg. r3, r3
/* 801F086C 001E65EC  41 82 FF E0 */	beq lbl_801F084C
/* 801F0870 001E65F0  4B FF E7 05 */	bl __GXIsGPFifoReady
/* 801F0874 001E65F4  54 60 06 3F */	clrlwi. r0, r3, 0x18
/* 801F0878 001E65F8  41 82 00 48 */	beq lbl_801F08C0
/* 801F087C 001E65FC  4B FF E8 65 */	bl __GXCleanGPFifo
/* 801F0880 001E6600  4B FF CF 59 */	bl __GXInitRevisionBits
/* 801F0884 001E6604  38 00 00 00 */	li r0, 0
/* 801F0888 001E6608  90 1F 05 FC */	stw r0, 0x5fc(r31)
/* 801F088C 001E660C  48 00 00 08 */	b lbl_801F0894
/* 801F0890 001E6610  48 00 05 81 */	bl __GXSetDirtyState
lbl_801F0894:
/* 801F0894 001E6614  38 00 00 00 */	li r0, 0
/* 801F0898 001E6618  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 801F089C 001E661C  90 03 80 00 */	stw r0, 0xCC008000@l(r3)
/* 801F08A0 001E6620  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08A4 001E6624  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08A8 001E6628  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08AC 001E662C  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08B0 001E6630  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08B4 001E6634  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08B8 001E6638  90 03 80 00 */	stw r0, -0x8000(r3)
/* 801F08BC 001E663C  4B FE 47 E5 */	bl PPCSync
lbl_801F08C0:
/* 801F08C0 001E6640  39 61 00 20 */	addi r11, r1, 0x20
/* 801F08C4 001E6644  48 20 0A A5 */	bl _restgpr_26
/* 801F08C8 001E6648  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801F08CC 001E664C  7C 08 03 A6 */	mtlr r0
/* 801F08D0 001E6650  38 21 00 20 */	addi r1, r1, 0x20
/* 801F08D4 001E6654  4E 80 00 20 */	blr 

.global GXSetDrawSync
GXSetDrawSync:
/* 801F08D8 001E6658  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801F08DC 001E665C  7C 08 02 A6 */	mflr r0
/* 801F08E0 001E6660  90 01 00 24 */	stw r0, 0x24(r1)
/* 801F08E4 001E6664  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801F08E8 001E6668  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801F08EC 001E666C  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801F08F0 001E6670  7C 7D 1B 78 */	mr r29, r3
/* 801F08F4 001E6674  4B FE C6 1D */	bl OSDisableInterrupts
/* 801F08F8 001E6678  3C 80 CC 01 */	lis r4, 0xCC008000@ha
/* 801F08FC 001E667C  38 A0 00 61 */	li r5, 0x61
/* 801F0900 001E6680  98 A4 80 00 */	stb r5, 0xCC008000@l(r4)
/* 801F0904 001E6684  67 A6 48 00 */	oris r6, r29, 0x4800
/* 801F0908 001E6688  38 00 00 47 */	li r0, 0x47
/* 801F090C 001E668C  83 C2 A4 90 */	lwz r30, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F0910 001E6690  90 C4 80 00 */	stw r6, -0x8000(r4)
/* 801F0914 001E6694  53 A6 04 3E */	rlwimi r6, r29, 0, 0x10, 0x1f
/* 801F0918 001E6698  50 06 C0 0E */	rlwimi r6, r0, 0x18, 0, 7
/* 801F091C 001E669C  7C 7D 1B 78 */	mr r29, r3
/* 801F0920 001E66A0  98 A4 80 00 */	stb r5, -0x8000(r4)
/* 801F0924 001E66A4  90 C4 80 00 */	stw r6, -0x8000(r4)
/* 801F0928 001E66A8  80 1E 05 FC */	lwz r0, 0x5fc(r30)
/* 801F092C 001E66AC  2C 00 00 00 */	cmpwi r0, 0
/* 801F0930 001E66B0  41 82 00 08 */	beq lbl_801F0938
/* 801F0934 001E66B4  48 00 04 DD */	bl __GXSetDirtyState
lbl_801F0938:
/* 801F0938 001E66B8  3B E0 00 00 */	li r31, 0
/* 801F093C 001E66BC  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 801F0940 001E66C0  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 801F0944 001E66C4  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0948 001E66C8  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F094C 001E66CC  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0950 001E66D0  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0954 001E66D4  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0958 001E66D8  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F095C 001E66DC  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0960 001E66E0  4B FE 47 41 */	bl PPCSync
/* 801F0964 001E66E4  7F A3 EB 78 */	mr r3, r29
/* 801F0968 001E66E8  4B FE C5 D1 */	bl OSRestoreInterrupts
/* 801F096C 001E66EC  B3 FE 00 02 */	sth r31, 2(r30)
/* 801F0970 001E66F0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801F0974 001E66F4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801F0978 001E66F8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801F097C 001E66FC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801F0980 001E6700  7C 08 03 A6 */	mtlr r0
/* 801F0984 001E6704  38 21 00 20 */	addi r1, r1, 0x20
/* 801F0988 001E6708  4E 80 00 20 */	blr 

.global GXReadDrawSync
GXReadDrawSync:
/* 801F098C 001E670C  80 6D C4 58 */	lwz r3, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0990 001E6710  A0 63 00 0E */	lhz r3, 0xe(r3)
/* 801F0994 001E6714  4E 80 00 20 */	blr 

.global GXSetDrawDone
GXSetDrawDone:
/* 801F0998 001E6718  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F099C 001E671C  7C 08 02 A6 */	mflr r0
/* 801F09A0 001E6720  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F09A4 001E6724  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801F09A8 001E6728  93 C1 00 08 */	stw r30, 8(r1)
/* 801F09AC 001E672C  4B FE C5 65 */	bl OSDisableInterrupts
/* 801F09B0 001E6730  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 801F09B4 001E6734  38 00 00 61 */	li r0, 0x61
/* 801F09B8 001E6738  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 801F09BC 001E673C  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 801F09C0 001E6740  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 801F09C4 001E6744  80 82 A4 90 */	lwz r4, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F09C8 001E6748  90 05 80 00 */	stw r0, -0x8000(r5)
/* 801F09CC 001E674C  7C 7E 1B 78 */	mr r30, r3
/* 801F09D0 001E6750  80 04 05 FC */	lwz r0, 0x5fc(r4)
/* 801F09D4 001E6754  2C 00 00 00 */	cmpwi r0, 0
/* 801F09D8 001E6758  41 82 00 08 */	beq lbl_801F09E0
/* 801F09DC 001E675C  48 00 04 35 */	bl __GXSetDirtyState
lbl_801F09E0:
/* 801F09E0 001E6760  3B E0 00 00 */	li r31, 0
/* 801F09E4 001E6764  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 801F09E8 001E6768  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 801F09EC 001E676C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F09F0 001E6770  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F09F4 001E6774  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F09F8 001E6778  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F09FC 001E677C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A00 001E6780  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A04 001E6784  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A08 001E6788  4B FE 46 99 */	bl PPCSync
/* 801F0A0C 001E678C  9B ED C4 A0 */	stb r31, lbl_805A08C0-_SDA_BASE_(r13)
/* 801F0A10 001E6790  7F C3 F3 78 */	mr r3, r30
/* 801F0A14 001E6794  4B FE C5 25 */	bl OSRestoreInterrupts
/* 801F0A18 001E6798  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0A1C 001E679C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801F0A20 001E67A0  83 C1 00 08 */	lwz r30, 8(r1)
/* 801F0A24 001E67A4  7C 08 03 A6 */	mtlr r0
/* 801F0A28 001E67A8  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0A2C 001E67AC  4E 80 00 20 */	blr 

.global GXDrawDone
GXDrawDone:
/* 801F0A30 001E67B0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0A34 001E67B4  7C 08 02 A6 */	mflr r0
/* 801F0A38 001E67B8  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F0A3C 001E67BC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801F0A40 001E67C0  93 C1 00 08 */	stw r30, 8(r1)
/* 801F0A44 001E67C4  4B FE C4 CD */	bl OSDisableInterrupts
/* 801F0A48 001E67C8  3C A0 CC 01 */	lis r5, 0xCC008000@ha
/* 801F0A4C 001E67CC  38 00 00 61 */	li r0, 0x61
/* 801F0A50 001E67D0  3C 80 45 00 */	lis r4, 0x45000002@ha
/* 801F0A54 001E67D4  98 05 80 00 */	stb r0, 0xCC008000@l(r5)
/* 801F0A58 001E67D8  38 04 00 02 */	addi r0, r4, 0x45000002@l
/* 801F0A5C 001E67DC  80 82 A4 90 */	lwz r4, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F0A60 001E67E0  90 05 80 00 */	stw r0, -0x8000(r5)
/* 801F0A64 001E67E4  7C 7E 1B 78 */	mr r30, r3
/* 801F0A68 001E67E8  80 04 05 FC */	lwz r0, 0x5fc(r4)
/* 801F0A6C 001E67EC  2C 00 00 00 */	cmpwi r0, 0
/* 801F0A70 001E67F0  41 82 00 08 */	beq lbl_801F0A78
/* 801F0A74 001E67F4  48 00 03 9D */	bl __GXSetDirtyState
lbl_801F0A78:
/* 801F0A78 001E67F8  3B E0 00 00 */	li r31, 0
/* 801F0A7C 001E67FC  3C 60 CC 01 */	lis r3, 0xCC008000@ha
/* 801F0A80 001E6800  93 E3 80 00 */	stw r31, 0xCC008000@l(r3)
/* 801F0A84 001E6804  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A88 001E6808  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A8C 001E680C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A90 001E6810  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A94 001E6814  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A98 001E6818  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0A9C 001E681C  93 E3 80 00 */	stw r31, -0x8000(r3)
/* 801F0AA0 001E6820  4B FE 46 01 */	bl PPCSync
/* 801F0AA4 001E6824  9B ED C4 A0 */	stb r31, lbl_805A08C0-_SDA_BASE_(r13)
/* 801F0AA8 001E6828  7F C3 F3 78 */	mr r3, r30
/* 801F0AAC 001E682C  4B FE C4 8D */	bl OSRestoreInterrupts
/* 801F0AB0 001E6830  4B FE C4 61 */	bl OSDisableInterrupts
/* 801F0AB4 001E6834  7C 7E 1B 78 */	mr r30, r3
/* 801F0AB8 001E6838  48 00 00 0C */	b lbl_801F0AC4
lbl_801F0ABC:
/* 801F0ABC 001E683C  38 6D C4 98 */	addi r3, r13, lbl_805A08B8-_SDA_BASE_
/* 801F0AC0 001E6840  4B FF 0C D1 */	bl OSSleepThread
lbl_801F0AC4:
/* 801F0AC4 001E6844  88 0D C4 A0 */	lbz r0, lbl_805A08C0-_SDA_BASE_(r13)
/* 801F0AC8 001E6848  2C 00 00 00 */	cmpwi r0, 0
/* 801F0ACC 001E684C  41 82 FF F0 */	beq lbl_801F0ABC
/* 801F0AD0 001E6850  7F C3 F3 78 */	mr r3, r30
/* 801F0AD4 001E6854  4B FE C4 65 */	bl OSRestoreInterrupts
/* 801F0AD8 001E6858  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0ADC 001E685C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801F0AE0 001E6860  83 C1 00 08 */	lwz r30, 8(r1)
/* 801F0AE4 001E6864  7C 08 03 A6 */	mtlr r0
/* 801F0AE8 001E6868  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0AEC 001E686C  4E 80 00 20 */	blr 

.global GXPixModeSync
GXPixModeSync:
/* 801F0AF0 001E6870  3C 80 CC 01 */	lis r4, 0xCC008000@ha
/* 801F0AF4 001E6874  38 00 00 61 */	li r0, 0x61
/* 801F0AF8 001E6878  98 04 80 00 */	stb r0, 0xCC008000@l(r4)
/* 801F0AFC 001E687C  38 00 00 00 */	li r0, 0
/* 801F0B00 001E6880  80 A2 A4 90 */	lwz r5, lbl_805A37B0-_SDA2_BASE_(r2)
/* 801F0B04 001E6884  80 65 02 2C */	lwz r3, 0x22c(r5)
/* 801F0B08 001E6888  90 64 80 00 */	stw r3, -0x8000(r4)
/* 801F0B0C 001E688C  B0 05 00 02 */	sth r0, 2(r5)
/* 801F0B10 001E6890  4E 80 00 20 */	blr 

.global GXPokeAlphaMode
GXPokeAlphaMode:
/* 801F0B14 001E6894  80 AD C4 58 */	lwz r5, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0B18 001E6898  50 64 40 2E */	rlwimi r4, r3, 8, 0, 0x17
/* 801F0B1C 001E689C  B0 85 00 06 */	sth r4, 6(r5)
/* 801F0B20 001E68A0  4E 80 00 20 */	blr 

.global GXPokeAlphaRead
GXPokeAlphaRead:
/* 801F0B24 001E68A4  38 00 00 00 */	li r0, 0
/* 801F0B28 001E68A8  80 8D C4 58 */	lwz r4, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0B2C 001E68AC  50 60 07 BE */	rlwimi r0, r3, 0, 0x1e, 0x1f
/* 801F0B30 001E68B0  60 00 00 04 */	ori r0, r0, 4
/* 801F0B34 001E68B4  B0 04 00 08 */	sth r0, 8(r4)
/* 801F0B38 001E68B8  4E 80 00 20 */	blr 

.global GXPokeAlphaUpdate
GXPokeAlphaUpdate:
/* 801F0B3C 001E68BC  80 8D C4 58 */	lwz r4, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0B40 001E68C0  A0 04 00 02 */	lhz r0, 2(r4)
/* 801F0B44 001E68C4  50 60 26 F6 */	rlwimi r0, r3, 4, 0x1b, 0x1b
/* 801F0B48 001E68C8  B0 04 00 02 */	sth r0, 2(r4)
/* 801F0B4C 001E68CC  4E 80 00 20 */	blr 

.global GXPokeBlendMode
GXPokeBlendMode:
/* 801F0B50 001E68D0  80 ED C4 58 */	lwz r7, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0B54 001E68D4  2C 03 00 01 */	cmpwi r3, 1
/* 801F0B58 001E68D8  38 00 00 00 */	li r0, 0
/* 801F0B5C 001E68DC  A1 27 00 02 */	lhz r9, 2(r7)
/* 801F0B60 001E68E0  41 82 00 0C */	beq lbl_801F0B6C
/* 801F0B64 001E68E4  2C 03 00 03 */	cmpwi r3, 3
/* 801F0B68 001E68E8  40 82 00 08 */	bne lbl_801F0B70
lbl_801F0B6C:
/* 801F0B6C 001E68EC  38 00 00 01 */	li r0, 1
lbl_801F0B70:
/* 801F0B70 001E68F0  38 E3 FF FD */	addi r7, r3, -3
/* 801F0B74 001E68F4  50 09 07 FE */	rlwimi r9, r0, 0, 0x1f, 0x1f
/* 801F0B78 001E68F8  38 03 FF FE */	addi r0, r3, -2
/* 801F0B7C 001E68FC  80 6D C4 58 */	lwz r3, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0B80 001E6900  7C E8 00 34 */	cntlzw r8, r7
/* 801F0B84 001E6904  7C 07 00 34 */	cntlzw r7, r0
/* 801F0B88 001E6908  38 00 00 41 */	li r0, 0x41
/* 801F0B8C 001E690C  51 09 35 28 */	rlwimi r9, r8, 6, 0x14, 0x14
/* 801F0B90 001E6910  50 E9 E7 BC */	rlwimi r9, r7, 0x1c, 0x1e, 0x1e
/* 801F0B94 001E6914  50 C9 64 26 */	rlwimi r9, r6, 0xc, 0x10, 0x13
/* 801F0B98 001E6918  50 89 45 6E */	rlwimi r9, r4, 8, 0x15, 0x17
/* 801F0B9C 001E691C  50 A9 2E 34 */	rlwimi r9, r5, 5, 0x18, 0x1a
/* 801F0BA0 001E6920  50 09 C0 0E */	rlwimi r9, r0, 0x18, 0, 7
/* 801F0BA4 001E6924  B1 23 00 02 */	sth r9, 2(r3)
/* 801F0BA8 001E6928  4E 80 00 20 */	blr 

.global GXPokeColorUpdate
GXPokeColorUpdate:
/* 801F0BAC 001E692C  80 8D C4 58 */	lwz r4, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0BB0 001E6930  A0 04 00 02 */	lhz r0, 2(r4)
/* 801F0BB4 001E6934  50 60 1F 38 */	rlwimi r0, r3, 3, 0x1c, 0x1c
/* 801F0BB8 001E6938  B0 04 00 02 */	sth r0, 2(r4)
/* 801F0BBC 001E693C  4E 80 00 20 */	blr 

.global GXPokeDstAlpha
GXPokeDstAlpha:
/* 801F0BC0 001E6940  80 AD C4 58 */	lwz r5, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0BC4 001E6944  38 00 00 00 */	li r0, 0
/* 801F0BC8 001E6948  50 80 06 3E */	rlwimi r0, r4, 0, 0x18, 0x1f
/* 801F0BCC 001E694C  50 60 45 EE */	rlwimi r0, r3, 8, 0x17, 0x17
/* 801F0BD0 001E6950  B0 05 00 04 */	sth r0, 4(r5)
/* 801F0BD4 001E6954  4E 80 00 20 */	blr 

.global GXPokeDither
GXPokeDither:
/* 801F0BD8 001E6958  80 8D C4 58 */	lwz r4, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0BDC 001E695C  A0 04 00 02 */	lhz r0, 2(r4)
/* 801F0BE0 001E6960  50 60 17 7A */	rlwimi r0, r3, 2, 0x1d, 0x1d
/* 801F0BE4 001E6964  B0 04 00 02 */	sth r0, 2(r4)
/* 801F0BE8 001E6968  4E 80 00 20 */	blr 

.global GXPokeZMode
GXPokeZMode:
/* 801F0BEC 001E696C  80 CD C4 58 */	lwz r6, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0BF0 001E6970  38 00 00 00 */	li r0, 0
/* 801F0BF4 001E6974  50 60 07 FE */	rlwimi r0, r3, 0, 0x1f, 0x1f
/* 801F0BF8 001E6978  50 80 0F 3C */	rlwimi r0, r4, 1, 0x1c, 0x1e
/* 801F0BFC 001E697C  50 A0 26 F6 */	rlwimi r0, r5, 4, 0x1b, 0x1b
/* 801F0C00 001E6980  B0 06 00 00 */	sth r0, 0(r6)
/* 801F0C04 001E6984  4E 80 00 20 */	blr 

.global GXPeekARGB
GXPeekARGB:
/* 801F0C08 001E6988  3C C0 C8 00 */	lis r6, 0xc800
/* 801F0C0C 001E698C  50 66 15 3A */	rlwimi r6, r3, 2, 0x14, 0x1d
/* 801F0C10 001E6990  50 86 62 A6 */	rlwimi r6, r4, 0xc, 0xa, 0x13
/* 801F0C14 001E6994  80 06 00 00 */	lwz r0, 0(r6)
/* 801F0C18 001E6998  90 05 00 00 */	stw r0, 0(r5)
/* 801F0C1C 001E699C  4E 80 00 20 */	blr 

.global GXSetDrawSyncCallback
GXSetDrawSyncCallback:
/* 801F0C20 001E69A0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0C24 001E69A4  7C 08 02 A6 */	mflr r0
/* 801F0C28 001E69A8  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F0C2C 001E69AC  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801F0C30 001E69B0  93 C1 00 08 */	stw r30, 8(r1)
/* 801F0C34 001E69B4  7C 7E 1B 78 */	mr r30, r3
/* 801F0C38 001E69B8  83 ED C4 A8 */	lwz r31, lbl_805A08C8-_SDA_BASE_(r13)
/* 801F0C3C 001E69BC  4B FE C2 D5 */	bl OSDisableInterrupts
/* 801F0C40 001E69C0  93 CD C4 A8 */	stw r30, lbl_805A08C8-_SDA_BASE_(r13)
/* 801F0C44 001E69C4  4B FE C2 F5 */	bl OSRestoreInterrupts
/* 801F0C48 001E69C8  7F E3 FB 78 */	mr r3, r31
/* 801F0C4C 001E69CC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801F0C50 001E69D0  83 C1 00 08 */	lwz r30, 8(r1)
/* 801F0C54 001E69D4  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0C58 001E69D8  7C 08 03 A6 */	mtlr r0
/* 801F0C5C 001E69DC  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0C60 001E69E0  4E 80 00 20 */	blr 

.global GXTokenInterruptHandler
GXTokenInterruptHandler:
/* 801F0C64 001E69E4  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 801F0C68 001E69E8  7C 08 02 A6 */	mflr r0
/* 801F0C6C 001E69EC  90 01 02 E4 */	stw r0, 0x2e4(r1)
/* 801F0C70 001E69F0  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 801F0C74 001E69F4  93 C1 02 D8 */	stw r30, 0x2d8(r1)
/* 801F0C78 001E69F8  7C 9E 23 78 */	mr r30, r4
/* 801F0C7C 001E69FC  80 0D C4 A8 */	lwz r0, lbl_805A08C8-_SDA_BASE_(r13)
/* 801F0C80 001E6A00  80 6D C4 58 */	lwz r3, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0C84 001E6A04  2C 00 00 00 */	cmpwi r0, 0
/* 801F0C88 001E6A08  A3 E3 00 0E */	lhz r31, 0xe(r3)
/* 801F0C8C 001E6A0C  41 82 00 34 */	beq lbl_801F0CC0
/* 801F0C90 001E6A10  38 61 00 08 */	addi r3, r1, 8
/* 801F0C94 001E6A14  4B FE 75 61 */	bl OSClearContext
/* 801F0C98 001E6A18  38 61 00 08 */	addi r3, r1, 8
/* 801F0C9C 001E6A1C  4B FE 73 31 */	bl OSSetCurrentContext
/* 801F0CA0 001E6A20  81 8D C4 A8 */	lwz r12, lbl_805A08C8-_SDA_BASE_(r13)
/* 801F0CA4 001E6A24  7F E3 FB 78 */	mr r3, r31
/* 801F0CA8 001E6A28  7D 89 03 A6 */	mtctr r12
/* 801F0CAC 001E6A2C  4E 80 04 21 */	bctrl 
/* 801F0CB0 001E6A30  38 61 00 08 */	addi r3, r1, 8
/* 801F0CB4 001E6A34  4B FE 75 41 */	bl OSClearContext
/* 801F0CB8 001E6A38  7F C3 F3 78 */	mr r3, r30
/* 801F0CBC 001E6A3C  4B FE 73 11 */	bl OSSetCurrentContext
lbl_801F0CC0:
/* 801F0CC0 001E6A40  80 6D C4 58 */	lwz r3, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0CC4 001E6A44  A0 03 00 0A */	lhz r0, 0xa(r3)
/* 801F0CC8 001E6A48  60 00 00 04 */	ori r0, r0, 4
/* 801F0CCC 001E6A4C  B0 03 00 0A */	sth r0, 0xa(r3)
/* 801F0CD0 001E6A50  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 801F0CD4 001E6A54  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 801F0CD8 001E6A58  83 C1 02 D8 */	lwz r30, 0x2d8(r1)
/* 801F0CDC 001E6A5C  7C 08 03 A6 */	mtlr r0
/* 801F0CE0 001E6A60  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 801F0CE4 001E6A64  4E 80 00 20 */	blr 

.global GXSetDrawDoneCallback
GXSetDrawDoneCallback:
/* 801F0CE8 001E6A68  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0CEC 001E6A6C  7C 08 02 A6 */	mflr r0
/* 801F0CF0 001E6A70  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F0CF4 001E6A74  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801F0CF8 001E6A78  93 C1 00 08 */	stw r30, 8(r1)
/* 801F0CFC 001E6A7C  7C 7E 1B 78 */	mr r30, r3
/* 801F0D00 001E6A80  83 ED C4 A4 */	lwz r31, lbl_805A08C4-_SDA_BASE_(r13)
/* 801F0D04 001E6A84  4B FE C2 0D */	bl OSDisableInterrupts
/* 801F0D08 001E6A88  93 CD C4 A4 */	stw r30, lbl_805A08C4-_SDA_BASE_(r13)
/* 801F0D0C 001E6A8C  4B FE C2 2D */	bl OSRestoreInterrupts
/* 801F0D10 001E6A90  7F E3 FB 78 */	mr r3, r31
/* 801F0D14 001E6A94  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801F0D18 001E6A98  83 C1 00 08 */	lwz r30, 8(r1)
/* 801F0D1C 001E6A9C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0D20 001E6AA0  7C 08 03 A6 */	mtlr r0
/* 801F0D24 001E6AA4  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0D28 001E6AA8  4E 80 00 20 */	blr 

.global GXFinishInterruptHandler
GXFinishInterruptHandler:
/* 801F0D2C 001E6AAC  94 21 FD 20 */	stwu r1, -0x2e0(r1)
/* 801F0D30 001E6AB0  7C 08 02 A6 */	mflr r0
/* 801F0D34 001E6AB4  38 60 00 01 */	li r3, 1
/* 801F0D38 001E6AB8  90 01 02 E4 */	stw r0, 0x2e4(r1)
/* 801F0D3C 001E6ABC  93 E1 02 DC */	stw r31, 0x2dc(r1)
/* 801F0D40 001E6AC0  7C 9F 23 78 */	mr r31, r4
/* 801F0D44 001E6AC4  80 AD C4 58 */	lwz r5, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0D48 001E6AC8  A0 05 00 0A */	lhz r0, 0xa(r5)
/* 801F0D4C 001E6ACC  60 00 00 08 */	ori r0, r0, 8
/* 801F0D50 001E6AD0  B0 05 00 0A */	sth r0, 0xa(r5)
/* 801F0D54 001E6AD4  80 0D C4 A4 */	lwz r0, lbl_805A08C4-_SDA_BASE_(r13)
/* 801F0D58 001E6AD8  98 6D C4 A0 */	stb r3, lbl_805A08C0-_SDA_BASE_(r13)
/* 801F0D5C 001E6ADC  2C 00 00 00 */	cmpwi r0, 0
/* 801F0D60 001E6AE0  41 82 00 30 */	beq lbl_801F0D90
/* 801F0D64 001E6AE4  38 61 00 08 */	addi r3, r1, 8
/* 801F0D68 001E6AE8  4B FE 74 8D */	bl OSClearContext
/* 801F0D6C 001E6AEC  38 61 00 08 */	addi r3, r1, 8
/* 801F0D70 001E6AF0  4B FE 72 5D */	bl OSSetCurrentContext
/* 801F0D74 001E6AF4  81 8D C4 A4 */	lwz r12, lbl_805A08C4-_SDA_BASE_(r13)
/* 801F0D78 001E6AF8  7D 89 03 A6 */	mtctr r12
/* 801F0D7C 001E6AFC  4E 80 04 21 */	bctrl 
/* 801F0D80 001E6B00  38 61 00 08 */	addi r3, r1, 8
/* 801F0D84 001E6B04  4B FE 74 71 */	bl OSClearContext
/* 801F0D88 001E6B08  7F E3 FB 78 */	mr r3, r31
/* 801F0D8C 001E6B0C  4B FE 72 41 */	bl OSSetCurrentContext
lbl_801F0D90:
/* 801F0D90 001E6B10  38 6D C4 98 */	addi r3, r13, lbl_805A08B8-_SDA_BASE_
/* 801F0D94 001E6B14  4B FF 0A E9 */	bl OSWakeupThread
/* 801F0D98 001E6B18  80 01 02 E4 */	lwz r0, 0x2e4(r1)
/* 801F0D9C 001E6B1C  83 E1 02 DC */	lwz r31, 0x2dc(r1)
/* 801F0DA0 001E6B20  7C 08 03 A6 */	mtlr r0
/* 801F0DA4 001E6B24  38 21 02 E0 */	addi r1, r1, 0x2e0
/* 801F0DA8 001E6B28  4E 80 00 20 */	blr 

.global __GXPEInit
__GXPEInit:
/* 801F0DAC 001E6B2C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801F0DB0 001E6B30  7C 08 02 A6 */	mflr r0
/* 801F0DB4 001E6B34  3C 80 80 1F */	lis r4, GXTokenInterruptHandler@ha
/* 801F0DB8 001E6B38  38 60 00 12 */	li r3, 0x12
/* 801F0DBC 001E6B3C  90 01 00 14 */	stw r0, 0x14(r1)
/* 801F0DC0 001E6B40  38 84 0C 64 */	addi r4, r4, GXTokenInterruptHandler@l
/* 801F0DC4 001E6B44  4B FE C1 99 */	bl __OSSetInterruptHandler
/* 801F0DC8 001E6B48  3C 80 80 1F */	lis r4, GXFinishInterruptHandler@ha
/* 801F0DCC 001E6B4C  38 60 00 13 */	li r3, 0x13
/* 801F0DD0 001E6B50  38 84 0D 2C */	addi r4, r4, GXFinishInterruptHandler@l
/* 801F0DD4 001E6B54  4B FE C1 89 */	bl __OSSetInterruptHandler
/* 801F0DD8 001E6B58  38 6D C4 98 */	addi r3, r13, lbl_805A08B8-_SDA_BASE_
/* 801F0DDC 001E6B5C  4B FE F9 29 */	bl OSInitThreadQueue
/* 801F0DE0 001E6B60  38 60 20 00 */	li r3, 0x2000
/* 801F0DE4 001E6B64  4B FE C5 3D */	bl __OSUnmaskInterrupts
/* 801F0DE8 001E6B68  38 60 10 00 */	li r3, 0x1000
/* 801F0DEC 001E6B6C  4B FE C5 35 */	bl __OSUnmaskInterrupts
/* 801F0DF0 001E6B70  80 6D C4 58 */	lwz r3, lbl_805A0878-_SDA_BASE_(r13)
/* 801F0DF4 001E6B74  A0 03 00 0A */	lhz r0, 0xa(r3)
/* 801F0DF8 001E6B78  60 00 00 0F */	ori r0, r0, 0xf
/* 801F0DFC 001E6B7C  B0 03 00 0A */	sth r0, 0xa(r3)
/* 801F0E00 001E6B80  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801F0E04 001E6B84  7C 08 03 A6 */	mtlr r0
/* 801F0E08 001E6B88  38 21 00 10 */	addi r1, r1, 0x10
/* 801F0E0C 001E6B8C  4E 80 00 20 */	blr 

