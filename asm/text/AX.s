.include "macros.inc"

.section .text, "ax"  # 0x8000C860 - 0x804064E0

.global AXInitSpecifyMem
AXInitSpecifyMem:
/* 801FF138 001F4EB8  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801FF13C 001F4EBC  7C 08 02 A6 */	mflr r0
/* 801FF140 001F4EC0  90 01 00 14 */	stw r0, 0x14(r1)
/* 801FF144 001F4EC4  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801FF148 001F4EC8  7C 9F 23 78 */	mr r31, r4
/* 801FF14C 001F4ECC  93 C1 00 08 */	stw r30, 8(r1)
/* 801FF150 001F4ED0  7C 7E 1B 78 */	mr r30, r3
/* 801FF154 001F4ED4  80 0D C6 00 */	lwz r0, lbl_805A0A20-_SDA_BASE_(r13)
/* 801FF158 001F4ED8  2C 00 00 00 */	cmpwi r0, 0
/* 801FF15C 001F4EDC  40 82 00 38 */	bne lbl_801FF194
/* 801FF160 001F4EE0  80 6D A6 F0 */	lwz r3, lbl_8059EB10-_SDA_BASE_(r13)
/* 801FF164 001F4EE4  4B FD 74 29 */	bl OSRegisterVersion
/* 801FF168 001F4EE8  48 00 01 55 */	bl __AXAllocInit
/* 801FF16C 001F4EEC  7F C3 F3 78 */	mr r3, r30
/* 801FF170 001F4EF0  7F E4 FB 78 */	mr r4, r31
/* 801FF174 001F4EF4  48 00 2D C5 */	bl __AXVPBInitSpecifyMem
/* 801FF178 001F4EF8  48 00 23 49 */	bl __AXSPBInit
/* 801FF17C 001F4EFC  48 00 05 E9 */	bl __AXAuxInit
/* 801FF180 001F4F00  48 00 18 09 */	bl __AXClInit
/* 801FF184 001F4F04  38 60 00 00 */	li r3, 0
/* 801FF188 001F4F08  48 00 1C F9 */	bl __AXOutInit
/* 801FF18C 001F4F0C  38 00 00 01 */	li r0, 1
/* 801FF190 001F4F10  90 0D C6 00 */	stw r0, lbl_805A0A20-_SDA_BASE_(r13)
lbl_801FF194:
/* 801FF194 001F4F14  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801FF198 001F4F18  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801FF19C 001F4F1C  83 C1 00 08 */	lwz r30, 8(r1)
/* 801FF1A0 001F4F20  7C 08 03 A6 */	mtlr r0
/* 801FF1A4 001F4F24  38 21 00 10 */	addi r1, r1, 0x10
/* 801FF1A8 001F4F28  4E 80 00 20 */	blr 

.global AXQuit
AXQuit:
/* 801FF1AC 001F4F2C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801FF1B0 001F4F30  7C 08 02 A6 */	mflr r0
/* 801FF1B4 001F4F34  90 01 00 14 */	stw r0, 0x14(r1)
/* 801FF1B8 001F4F38  80 0D C6 00 */	lwz r0, lbl_805A0A20-_SDA_BASE_(r13)
/* 801FF1BC 001F4F3C  2C 00 00 00 */	cmpwi r0, 0
/* 801FF1C0 001F4F40  41 82 00 24 */	beq lbl_801FF1E4
/* 801FF1C4 001F4F44  48 00 1E B5 */	bl __AXOutQuit
/* 801FF1C8 001F4F48  48 00 01 A5 */	bl __AXAllocQuit
/* 801FF1CC 001F4F4C  48 00 30 39 */	bl __AXVPBQuit
/* 801FF1D0 001F4F50  48 00 23 49 */	bl __AXSPBQuit
/* 801FF1D4 001F4F54  48 00 06 A5 */	bl __AXAuxQuit
/* 801FF1D8 001F4F58  48 00 17 ED */	bl __AXClQuit
/* 801FF1DC 001F4F5C  38 00 00 00 */	li r0, 0
/* 801FF1E0 001F4F60  90 0D C6 00 */	stw r0, lbl_805A0A20-_SDA_BASE_(r13)
lbl_801FF1E4:
/* 801FF1E4 001F4F64  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801FF1E8 001F4F68  7C 08 03 A6 */	mtlr r0
/* 801FF1EC 001F4F6C  38 21 00 10 */	addi r1, r1, 0x10
/* 801FF1F0 001F4F70  4E 80 00 20 */	blr 

.global AXIsInit
AXIsInit:
/* 801FF1F4 001F4F74  80 6D C6 00 */	lwz r3, lbl_805A0A20-_SDA_BASE_(r13)
/* 801FF1F8 001F4F78  4E 80 00 20 */	blr 

