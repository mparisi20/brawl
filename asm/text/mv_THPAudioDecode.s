.include "macros.inc"

.section .text, "ax"  # 0x8000C860 - 0x804064E0

.global GetSizeTHPAudioDecWork
GetSizeTHPAudioDecWork:
/* 8007B0B4 00070E34  38 60 13 90 */	li r3, 0x1390
/* 8007B0B8 00070E38  4E 80 00 20 */	blr 

.global SetTHPAudioDecWork
SetTHPAudioDecWork:
/* 8007B0BC 00070E3C  80 0D BD C0 */	lwz r0, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B0C0 00070E40  2C 00 00 00 */	cmpwi r0, 0
/* 8007B0C4 00070E44  4C 82 00 20 */	bnelr 
/* 8007B0C8 00070E48  90 6D BD C0 */	stw r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B0CC 00070E4C  38 00 00 00 */	li r0, 0
/* 8007B0D0 00070E50  90 03 00 00 */	stw r0, 0(r3)
/* 8007B0D4 00070E54  4E 80 00 20 */	blr 

.global FreeTHPAudioDecWork
FreeTHPAudioDecWork:
/* 8007B0D8 00070E58  38 00 00 00 */	li r0, 0
/* 8007B0DC 00070E5C  90 0D BD C0 */	stw r0, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B0E0 00070E60  4E 80 00 20 */	blr 

.global CreateAudioDecodeThread
CreateAudioDecodeThread:
/* 8007B0E4 00070E64  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8007B0E8 00070E68  7C 08 02 A6 */	mflr r0
/* 8007B0EC 00070E6C  2C 04 00 00 */	cmpwi r4, 0
/* 8007B0F0 00070E70  7C 85 23 78 */	mr r5, r4
/* 8007B0F4 00070E74  90 01 00 14 */	stw r0, 0x14(r1)
/* 8007B0F8 00070E78  41 82 00 38 */	beq lbl_8007B130
/* 8007B0FC 00070E7C  80 CD BD C0 */	lwz r6, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B100 00070E80  3C 80 80 08 */	lis r4, AudioDecoderForOnMemory@ha
/* 8007B104 00070E84  7C 68 1B 78 */	mr r8, r3
/* 8007B108 00070E88  38 E0 10 00 */	li r7, 0x1000
/* 8007B10C 00070E8C  38 66 00 08 */	addi r3, r6, 8
/* 8007B110 00070E90  38 84 B2 94 */	addi r4, r4, AudioDecoderForOnMemory@l
/* 8007B114 00070E94  38 C6 13 20 */	addi r6, r6, 0x1320
/* 8007B118 00070E98  39 20 00 01 */	li r9, 1
/* 8007B11C 00070E9C  48 16 5B E1 */	bl OSCreateThread
/* 8007B120 00070EA0  2C 03 00 00 */	cmpwi r3, 0
/* 8007B124 00070EA4  40 82 00 44 */	bne lbl_8007B168
/* 8007B128 00070EA8  38 60 00 00 */	li r3, 0
/* 8007B12C 00070EAC  48 00 00 74 */	b lbl_8007B1A0
lbl_8007B130:
/* 8007B130 00070EB0  80 CD BD C0 */	lwz r6, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B134 00070EB4  3C 80 80 08 */	lis r4, AudioDecoder@ha
/* 8007B138 00070EB8  7C 68 1B 78 */	mr r8, r3
/* 8007B13C 00070EBC  38 A0 00 00 */	li r5, 0
/* 8007B140 00070EC0  38 66 00 08 */	addi r3, r6, 8
/* 8007B144 00070EC4  38 84 B2 0C */	addi r4, r4, AudioDecoder@l
/* 8007B148 00070EC8  38 C6 13 20 */	addi r6, r6, 0x1320
/* 8007B14C 00070ECC  38 E0 10 00 */	li r7, 0x1000
/* 8007B150 00070ED0  39 20 00 01 */	li r9, 1
/* 8007B154 00070ED4  48 16 5B A9 */	bl OSCreateThread
/* 8007B158 00070ED8  2C 03 00 00 */	cmpwi r3, 0
/* 8007B15C 00070EDC  40 82 00 0C */	bne lbl_8007B168
/* 8007B160 00070EE0  38 60 00 00 */	li r3, 0
/* 8007B164 00070EE4  48 00 00 3C */	b lbl_8007B1A0
lbl_8007B168:
/* 8007B168 00070EE8  80 8D BD C0 */	lwz r4, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B16C 00070EEC  38 A0 00 06 */	li r5, 6
/* 8007B170 00070EF0  38 64 13 20 */	addi r3, r4, 0x1320
/* 8007B174 00070EF4  38 84 13 60 */	addi r4, r4, 0x1360
/* 8007B178 00070EF8  48 16 2F 1D */	bl OSInitMessageQueue
/* 8007B17C 00070EFC  80 8D BD C0 */	lwz r4, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B180 00070F00  38 A0 00 06 */	li r5, 6
/* 8007B184 00070F04  38 64 13 40 */	addi r3, r4, 0x1340
/* 8007B188 00070F08  38 84 13 78 */	addi r4, r4, 0x1378
/* 8007B18C 00070F0C  48 16 2F 09 */	bl OSInitMessageQueue
/* 8007B190 00070F10  80 8D BD C0 */	lwz r4, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B194 00070F14  38 00 00 01 */	li r0, 1
/* 8007B198 00070F18  38 60 00 01 */	li r3, 1
/* 8007B19C 00070F1C  90 04 00 00 */	stw r0, 0(r4)
lbl_8007B1A0:
/* 8007B1A0 00070F20  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8007B1A4 00070F24  7C 08 03 A6 */	mtlr r0
/* 8007B1A8 00070F28  38 21 00 10 */	addi r1, r1, 0x10
/* 8007B1AC 00070F2C  4E 80 00 20 */	blr 

.global AudioDecodeThreadStart
AudioDecodeThreadStart:
/* 8007B1B0 00070F30  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B1B4 00070F34  80 03 00 00 */	lwz r0, 0(r3)
/* 8007B1B8 00070F38  2C 00 00 00 */	cmpwi r0, 0
/* 8007B1BC 00070F3C  4D 82 00 20 */	beqlr 
/* 8007B1C0 00070F40  38 63 00 08 */	addi r3, r3, 8
/* 8007B1C4 00070F44  48 16 61 A0 */	b OSResumeThread
/* 8007B1C8 00070F48  4E 80 00 20 */	blr 

.global AudioDecodeThreadCancel
AudioDecodeThreadCancel:
/* 8007B1CC 00070F4C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8007B1D0 00070F50  7C 08 02 A6 */	mflr r0
/* 8007B1D4 00070F54  90 01 00 14 */	stw r0, 0x14(r1)
/* 8007B1D8 00070F58  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B1DC 00070F5C  80 03 00 00 */	lwz r0, 0(r3)
/* 8007B1E0 00070F60  2C 00 00 00 */	cmpwi r0, 0
/* 8007B1E4 00070F64  41 82 00 18 */	beq lbl_8007B1FC
/* 8007B1E8 00070F68  38 63 00 08 */	addi r3, r3, 8
/* 8007B1EC 00070F6C  48 16 5E 61 */	bl OSCancelThread
/* 8007B1F0 00070F70  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B1F4 00070F74  38 00 00 00 */	li r0, 0
/* 8007B1F8 00070F78  90 03 00 00 */	stw r0, 0(r3)
lbl_8007B1FC:
/* 8007B1FC 00070F7C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8007B200 00070F80  7C 08 03 A6 */	mtlr r0
/* 8007B204 00070F84  38 21 00 10 */	addi r1, r1, 0x10
/* 8007B208 00070F88  4E 80 00 20 */	blr 

.global AudioDecoder
AudioDecoder:
/* 8007B20C 00070F8C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 8007B210 00070F90  7C 08 02 A6 */	mflr r0
/* 8007B214 00070F94  90 01 00 24 */	stw r0, 0x24(r1)
/* 8007B218 00070F98  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 8007B21C 00070F9C  3F E0 80 4A */	lis r31, lbl_8049DC00@ha
/* 8007B220 00070FA0  3B FF DC 00 */	addi r31, r31, lbl_8049DC00@l
/* 8007B224 00070FA4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 8007B228 00070FA8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 8007B22C 00070FAC  3B A0 00 00 */	li r29, 0
lbl_8007B230:
/* 8007B230 00070FB0  48 00 30 E5 */	bl PopReadedBuffer
/* 8007B234 00070FB4  7C 7E 1B 78 */	mr r30, r3
/* 8007B238 00070FB8  48 00 01 25 */	bl THPReadBuffer$7AudioDecode
/* 8007B23C 00070FBC  2C 1D 00 02 */	cmpwi r29, 2
/* 8007B240 00070FC0  40 80 00 34 */	bge lbl_8007B274
/* 8007B244 00070FC4  88 1F 00 A6 */	lbz r0, 0xa6(r31)
/* 8007B248 00070FC8  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 8007B24C 00070FCC  40 82 00 28 */	bne lbl_8007B274
/* 8007B250 00070FD0  80 7F 00 50 */	lwz r3, 0x50(r31)
/* 8007B254 00070FD4  80 BE 00 04 */	lwz r5, 4(r30)
/* 8007B258 00070FD8  80 9F 00 C0 */	lwz r4, 0xc0(r31)
/* 8007B25C 00070FDC  38 03 FF FF */	addi r0, r3, -1
/* 8007B260 00070FE0  7C 65 22 14 */	add r3, r5, r4
/* 8007B264 00070FE4  7C 03 00 40 */	cmplw r3, r0
/* 8007B268 00070FE8  40 82 00 0C */	bne lbl_8007B274
/* 8007B26C 00070FEC  38 60 00 01 */	li r3, 1
/* 8007B270 00070FF0  48 00 13 99 */	bl PrepareReady
lbl_8007B274:
/* 8007B274 00070FF4  2C 1D 00 02 */	cmpwi r29, 2
/* 8007B278 00070FF8  40 82 00 0C */	bne lbl_8007B284
/* 8007B27C 00070FFC  38 60 00 01 */	li r3, 1
/* 8007B280 00071000  48 00 13 89 */	bl PrepareReady
lbl_8007B284:
/* 8007B284 00071004  7F C3 F3 78 */	mr r3, r30
/* 8007B288 00071008  48 00 31 09 */	bl PushReadedBuffer2
/* 8007B28C 0007100C  3B BD 00 01 */	addi r29, r29, 1
/* 8007B290 00071010  4B FF FF A0 */	b lbl_8007B230

.global AudioDecoderForOnMemory
AudioDecoderForOnMemory:
/* 8007B294 00071014  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 8007B298 00071018  7C 08 02 A6 */	mflr r0
/* 8007B29C 0007101C  90 01 00 34 */	stw r0, 0x34(r1)
/* 8007B2A0 00071020  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 8007B2A4 00071024  3B E0 00 00 */	li r31, 0
/* 8007B2A8 00071028  93 C1 00 28 */	stw r30, 0x28(r1)
/* 8007B2AC 0007102C  3F C0 80 4A */	lis r30, lbl_8049DC00@ha
/* 8007B2B0 00071030  3B DE DC 00 */	addi r30, r30, lbl_8049DC00@l
/* 8007B2B4 00071034  93 A1 00 24 */	stw r29, 0x24(r1)
/* 8007B2B8 00071038  90 61 00 08 */	stw r3, 8(r1)
/* 8007B2BC 0007103C  83 BE 00 BC */	lwz r29, 0xbc(r30)
lbl_8007B2C0:
/* 8007B2C0 00071040  93 E1 00 0C */	stw r31, 0xc(r1)
/* 8007B2C4 00071044  38 61 00 08 */	addi r3, r1, 8
/* 8007B2C8 00071048  48 00 00 95 */	bl THPReadBuffer$7AudioDecode
/* 8007B2CC 0007104C  80 1E 00 C0 */	lwz r0, 0xc0(r30)
/* 8007B2D0 00071050  80 BE 00 50 */	lwz r5, 0x50(r30)
/* 8007B2D4 00071054  7C 9F 02 14 */	add r4, r31, r0
/* 8007B2D8 00071058  7C 64 2B 96 */	divwu r3, r4, r5
/* 8007B2DC 0007105C  38 05 FF FF */	addi r0, r5, -1
/* 8007B2E0 00071060  7C 63 29 D6 */	mullw r3, r3, r5
/* 8007B2E4 00071064  7C 63 20 50 */	subf r3, r3, r4
/* 8007B2E8 00071068  7C 03 00 40 */	cmplw r3, r0
/* 8007B2EC 0007106C  40 82 00 44 */	bne lbl_8007B330
/* 8007B2F0 00071070  88 1E 00 A6 */	lbz r0, 0xa6(r30)
/* 8007B2F4 00071074  54 00 07 FF */	clrlwi. r0, r0, 0x1f
/* 8007B2F8 00071078  41 82 00 18 */	beq lbl_8007B310
/* 8007B2FC 0007107C  80 61 00 08 */	lwz r3, 8(r1)
/* 8007B300 00071080  80 1E 00 B4 */	lwz r0, 0xb4(r30)
/* 8007B304 00071084  83 A3 00 00 */	lwz r29, 0(r3)
/* 8007B308 00071088  90 01 00 08 */	stw r0, 8(r1)
/* 8007B30C 0007108C  48 00 00 38 */	b lbl_8007B344
lbl_8007B310:
/* 8007B310 00071090  2C 1F 00 02 */	cmpwi r31, 2
/* 8007B314 00071094  40 80 00 0C */	bge lbl_8007B320
/* 8007B318 00071098  38 60 00 01 */	li r3, 1
/* 8007B31C 0007109C  48 00 12 ED */	bl PrepareReady
lbl_8007B320:
/* 8007B320 000710A0  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B324 000710A4  38 63 00 08 */	addi r3, r3, 8
/* 8007B328 000710A8  48 16 62 D5 */	bl OSSuspendThread
/* 8007B32C 000710AC  48 00 00 18 */	b lbl_8007B344
lbl_8007B330:
/* 8007B330 000710B0  80 61 00 08 */	lwz r3, 8(r1)
/* 8007B334 000710B4  80 83 00 00 */	lwz r4, 0(r3)
/* 8007B338 000710B8  7C 03 EA 14 */	add r0, r3, r29
/* 8007B33C 000710BC  90 01 00 08 */	stw r0, 8(r1)
/* 8007B340 000710C0  7C 9D 23 78 */	mr r29, r4
lbl_8007B344:
/* 8007B344 000710C4  2C 1F 00 02 */	cmpwi r31, 2
/* 8007B348 000710C8  40 82 00 0C */	bne lbl_8007B354
/* 8007B34C 000710CC  38 60 00 01 */	li r3, 1
/* 8007B350 000710D0  48 00 12 B9 */	bl PrepareReady
lbl_8007B354:
/* 8007B354 000710D4  3B FF 00 01 */	addi r31, r31, 1
/* 8007B358 000710D8  4B FF FF 68 */	b lbl_8007B2C0

.global THPReadBuffer$7AudioDecode
THPReadBuffer$7AudioDecode:
/* 8007B35C 000710DC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 8007B360 000710E0  7C 08 02 A6 */	mflr r0
/* 8007B364 000710E4  38 A0 00 01 */	li r5, 1
/* 8007B368 000710E8  90 01 00 24 */	stw r0, 0x24(r1)
/* 8007B36C 000710EC  38 81 00 08 */	addi r4, r1, 8
/* 8007B370 000710F0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 8007B374 000710F4  3F E0 80 4A */	lis r31, lbl_8049DC00@ha
/* 8007B378 000710F8  3B FF DC 00 */	addi r31, r31, lbl_8049DC00@l
/* 8007B37C 000710FC  93 C1 00 18 */	stw r30, 0x18(r1)
/* 8007B380 00071100  93 A1 00 14 */	stw r29, 0x14(r1)
/* 8007B384 00071104  93 81 00 10 */	stw r28, 0x10(r1)
/* 8007B388 00071108  80 1F 00 6C */	lwz r0, 0x6c(r31)
/* 8007B38C 0007110C  80 C3 00 00 */	lwz r6, 0(r3)
/* 8007B390 00071110  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B394 00071114  54 00 10 3A */	slwi r0, r0, 2
/* 8007B398 00071118  7F 86 02 14 */	add r28, r6, r0
/* 8007B39C 0007111C  3B A6 00 08 */	addi r29, r6, 8
/* 8007B3A0 00071120  38 63 13 20 */	addi r3, r3, 0x1320
/* 8007B3A4 00071124  3B 9C 00 08 */	addi r28, r28, 8
/* 8007B3A8 00071128  48 16 2E 15 */	bl OSReceiveMessage
/* 8007B3AC 0007112C  80 1F 00 6C */	lwz r0, 0x6c(r31)
/* 8007B3B0 00071130  83 C1 00 08 */	lwz r30, 8(r1)
/* 8007B3B4 00071134  7C 09 03 A6 */	mtctr r0
/* 8007B3B8 00071138  28 00 00 00 */	cmplwi r0, 0
/* 8007B3BC 0007113C  40 81 00 70 */	ble lbl_8007B42C
lbl_8007B3C0:
/* 8007B3C0 00071140  88 1F 00 70 */	lbz r0, 0x70(r31)
/* 8007B3C4 00071144  2C 00 00 01 */	cmpwi r0, 1
/* 8007B3C8 00071148  41 82 00 08 */	beq lbl_8007B3D0
/* 8007B3CC 0007114C  48 00 00 4C */	b lbl_8007B418
lbl_8007B3D0:
/* 8007B3D0 00071150  3C 80 80 4A */	lis r4, lbl_8049DC00@ha
/* 8007B3D4 00071154  80 DD 00 00 */	lwz r6, 0(r29)
/* 8007B3D8 00071158  38 84 DC 00 */	addi r4, r4, lbl_8049DC00@l
/* 8007B3DC 0007115C  80 7E 00 00 */	lwz r3, 0(r30)
/* 8007B3E0 00071160  80 04 00 DC */	lwz r0, 0xdc(r4)
/* 8007B3E4 00071164  38 A0 00 00 */	li r5, 0
/* 8007B3E8 00071168  7C 06 01 D6 */	mullw r0, r6, r0
/* 8007B3EC 0007116C  7C 9C 02 14 */	add r4, r28, r0
/* 8007B3F0 00071170  48 1E 41 19 */	bl THPAudioDecode
/* 8007B3F4 00071174  90 7E 00 08 */	stw r3, 8(r30)
/* 8007B3F8 00071178  7F C4 F3 78 */	mr r4, r30
/* 8007B3FC 0007117C  38 A0 00 01 */	li r5, 1
/* 8007B400 00071180  80 1E 00 00 */	lwz r0, 0(r30)
/* 8007B404 00071184  90 1E 00 04 */	stw r0, 4(r30)
/* 8007B408 00071188  80 6D BD C0 */	lwz r3, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B40C 0007118C  38 63 13 40 */	addi r3, r3, 0x1340
/* 8007B410 00071190  48 16 2C E5 */	bl OSSendMessage
/* 8007B414 00071194  48 00 00 18 */	b lbl_8007B42C
lbl_8007B418:
/* 8007B418 00071198  80 1D 00 00 */	lwz r0, 0(r29)
/* 8007B41C 0007119C  3B BD 00 04 */	addi r29, r29, 4
/* 8007B420 000711A0  3B FF 00 01 */	addi r31, r31, 1
/* 8007B424 000711A4  7F 9C 02 14 */	add r28, r28, r0
/* 8007B428 000711A8  42 00 FF 98 */	bdnz lbl_8007B3C0
lbl_8007B42C:
/* 8007B42C 000711AC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 8007B430 000711B0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 8007B434 000711B4  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 8007B438 000711B8  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 8007B43C 000711BC  83 81 00 10 */	lwz r28, 0x10(r1)
/* 8007B440 000711C0  7C 08 03 A6 */	mtlr r0
/* 8007B444 000711C4  38 21 00 20 */	addi r1, r1, 0x20
/* 8007B448 000711C8  4E 80 00 20 */	blr 

.global PushFreeAudioBuffer
PushFreeAudioBuffer:
/* 8007B44C 000711CC  80 CD BD C0 */	lwz r6, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B450 000711D0  7C 64 1B 78 */	mr r4, r3
/* 8007B454 000711D4  38 A0 00 00 */	li r5, 0
/* 8007B458 000711D8  38 66 13 20 */	addi r3, r6, 0x1320
/* 8007B45C 000711DC  48 16 2C 98 */	b OSSendMessage

.global PopDecodedAudioBuffer
PopDecodedAudioBuffer:
/* 8007B460 000711E0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 8007B464 000711E4  7C 08 02 A6 */	mflr r0
/* 8007B468 000711E8  7C 65 1B 78 */	mr r5, r3
/* 8007B46C 000711EC  90 01 00 14 */	stw r0, 0x14(r1)
/* 8007B470 000711F0  38 81 00 08 */	addi r4, r1, 8
/* 8007B474 000711F4  80 CD BD C0 */	lwz r6, lbl_805A01E0-_SDA_BASE_(r13)
/* 8007B478 000711F8  38 66 13 40 */	addi r3, r6, 0x1340
/* 8007B47C 000711FC  48 16 2D 41 */	bl OSReceiveMessage
/* 8007B480 00071200  2C 03 00 01 */	cmpwi r3, 1
/* 8007B484 00071204  40 82 00 0C */	bne lbl_8007B490
/* 8007B488 00071208  80 61 00 08 */	lwz r3, 8(r1)
/* 8007B48C 0007120C  48 00 00 08 */	b lbl_8007B494
lbl_8007B490:
/* 8007B490 00071210  38 60 00 00 */	li r3, 0
lbl_8007B494:
/* 8007B494 00071214  80 01 00 14 */	lwz r0, 0x14(r1)
/* 8007B498 00071218  7C 08 03 A6 */	mtlr r0
/* 8007B49C 0007121C  38 21 00 10 */	addi r1, r1, 0x10
/* 8007B4A0 00071220  4E 80 00 20 */	blr 

